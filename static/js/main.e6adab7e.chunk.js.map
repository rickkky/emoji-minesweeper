{"version":3,"sources":["containers/MineSweeper/initGame.ts","components/Checkbox/index.tsx","containers/MineSweeper/Block.tsx","utils/noop.ts","containers/MineSweeper/Grid.tsx","containers/MineSweeper/index.tsx","containers/MineSweeper/spread.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initGame","rowNum","colNum","bombNum","Math","floor","Error","bombMap","total","i","push","length","ri","random","temp","shuffle","createBombMap","blockMap","j","index","type","isMarked","isFlipped","count","flippedNum","markedNum","stepNum","status","defaultProps","createDefaultProps","classBlock","defaultChecked","indeterminate","getProps","createPropsGetter","Checkbox","props","id","className","style","role","name","checked","disabled","autoFocus","inputRef","children","onChange","handleClick","onClick","handleFocus","onFocus","handleBlur","onBlur","useState","innerChecked","setInnerChecked","realChecked","containerClassName","combineClassNames","join","ref","e","target","nativeEvent","stopPropagation","preventDefault","GameBlock","back","front","mark","handleMouseUp","onMouseUp","handleContextMenu","onContextMenu","handleMouseEnter","onMouseEnter","handleMouseLeave","onMouseLeave","noop","blank","bomb","boom","numbers","Grid","typeMap","rows","row","blocks","col","block","key","bind","undefined","ongoing","completed","failed","frightened","hovered","MineSweeper","handleInit","setState","game","handleBlockMouseUp","state","isFrigthened","button","forceUpdate","spread","handleBlockContextMenu","handleBlockMouseEnter","handleBlockMouseLeave","prevProps","prevState","this","innerProps","prevRowNum","prevColNum","prevBombNum","face","renderHeader","renderGrid","renderFooter","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e6adab7e.chunk.js","sourcesContent":["type BlockType = -2 | -1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8\n\ninterface BlockState {\n  type: BlockType\n  isMarked: boolean\n  isFlipped: boolean\n}\n\nexport type BlockMap = BlockState[]\n\nexport type Game = ReturnType<typeof initGame>\n\nexport default function initGame(\n  rowNum: number,\n  colNum: number,\n  bombNum: number,\n) {\n  rowNum = Math.floor(rowNum)\n  colNum = Math.floor(colNum)\n  bombNum = Math.floor(bombNum)\n\n  const total = rowNum * colNum\n\n  if (rowNum <= 0 || colNum <= 0 || bombNum <= 0 || bombNum > total) {\n    throw new Error('invalid game params')\n  }\n\n  const bombMap = createBombMap(rowNum, colNum, bombNum)\n  const blockMap = []\n\n  for (let i = 0; i < rowNum; ++i) {\n    for (let j = 0; j < colNum; ++j) {\n      const index = i * colNum + j\n\n      if (bombMap[index]) {\n        blockMap[index] = {\n          type: -1,\n          isMarked: false,\n          isFlipped: false,\n        }\n        continue\n      }\n\n      let count = 0\n\n      // left top\n      if (i > 0 && j > 0) {\n        count += bombMap[(i - 1) * colNum + j - 1] ? 1 : 0\n      }\n\n      // top\n      if (i > 0) {\n        count += bombMap[(i - 1) * colNum + j] ? 1 : 0\n      }\n\n      // right top\n      if (i > 0 && j < colNum - 1) {\n        count += bombMap[(i - 1) * colNum + j + 1] ? 1 : 0\n      }\n\n      // left\n      if (j > 0) {\n        count += bombMap[i * colNum + j - 1] ? 1 : 0\n      }\n\n      // right\n      if (j < colNum - 1) {\n        count += bombMap[i * colNum + j + 1] ? 1 : 0\n      }\n\n      // left bottom\n      if (i < rowNum - 1 && j > 0) {\n        count += bombMap[(i + 1) * colNum + j - 1] ? 1 : 0\n      }\n\n      // bottom\n      if (i < rowNum - 1) {\n        count += bombMap[(i + 1) * colNum + j] ? 1 : 0\n      }\n\n      // right bottom\n      if (i < rowNum - 1 && j < colNum - 1) {\n        count += bombMap[(i + 1) * colNum + j + 1] ? 1 : 0\n      }\n\n      blockMap[index] = {\n        type: count,\n        isMarked: false,\n        isFlipped: false,\n      }\n    }\n  }\n\n  return {\n    rowNum,\n    colNum,\n    bombNum,\n    bombMap,\n    blockMap: blockMap as BlockMap,\n    flippedNum: 0,\n    markedNum: 0,\n    stepNum: 0,\n    status: 'ongoing' as 'ongoing' | 'completed' | 'failed',\n  }\n}\n\nfunction createBombMap(rowNum: number, colNum: number, bombNum: number) {\n  const total = rowNum * colNum\n\n  const bombMap = []\n\n  for (let i = 0; i < total; ++i) {\n    if (i < bombNum) {\n      bombMap.push(true)\n    } else {\n      bombMap.push(false)\n    }\n  }\n\n  shuffle(bombMap)\n\n  return bombMap\n}\n\nfunction shuffle(bombMap: boolean[]) {\n  const length = bombMap.length\n\n  for (let i = 0; i < bombMap.length; ++i) {\n    const ri = Math.floor(Math.random() * (length - 1))\n    const temp = bombMap[i]\n    bombMap[i] = bombMap[ri]\n    bombMap[ri] = temp\n  }\n}\n","import React, { useState } from 'react'\nimport createPropsGetter, {\n  createDefaultProps,\n  WithDefault,\n} from 'create-props-getter'\nimport combineClassNames from 'combine-class-names'\nimport './Checkbox.scss'\n\nexport interface CheckboxChangeEvent {\n  target: CheckboxInnerProps\n  nativeEvent: Event\n  stopPropagation: () => void\n  preventDefault: () => void\n}\n\nexport type CheckboxProps = Props\n\nexport interface CheckboxInnerProps\n  extends WithDefault<Props, typeof defaultProps> {\n  checked: boolean\n}\n\ninterface Props extends Partial<typeof defaultProps> {\n  id?: string\n  className?: string\n  style?: React.CSSProperties\n  checked?: boolean\n  role?: string\n  name?: string\n  disabled?: boolean\n  autoFocus?: boolean\n  inputRef?: React.RefObject<HTMLInputElement>\n  children?: React.ReactNode\n  onChange?: (e: CheckboxChangeEvent) => void\n  onClick?: (e: React.MouseEvent<HTMLInputElement>) => void\n  onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void\n}\n\nconst defaultProps = createDefaultProps({\n  classBlock: 'ric-checkbox',\n  defaultChecked: false,\n  indeterminate: false,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst Checkbox: React.FC<Props> = (props: Props) => {\n  const {\n    id,\n    className,\n    classBlock,\n    style,\n    role,\n    name,\n    defaultChecked,\n    checked,\n    indeterminate,\n    disabled,\n    autoFocus,\n    inputRef,\n    children,\n    onChange,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n  } = getProps(props)\n\n  const [innerChecked, setInnerChecked] = useState(\n    indeterminate\n      ? true\n      : typeof checked === 'boolean'\n      ? checked\n      : defaultChecked,\n  )\n\n  const realChecked = indeterminate\n    ? true\n    : typeof checked === 'boolean'\n    ? checked\n    : innerChecked\n\n  const containerClassName = combineClassNames(\n    className || '',\n    `${classBlock}`,\n    {\n      [`${classBlock}--checked`]: realChecked,\n      [`${classBlock}--indeterminate`]: indeterminate,\n      [`${classBlock}--disabled`]: !!disabled,\n    },\n  ).join(' ')\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (disabled) {\n      return\n    }\n\n    if (!(typeof checked === 'boolean')) {\n      setInnerChecked(e.target.checked)\n    }\n\n    if (onChange) {\n      onChange({\n        target: {\n          ...getProps(props),\n          checked: e.target.checked,\n        },\n        nativeEvent: e.nativeEvent,\n        stopPropagation() {\n          e.stopPropagation()\n        },\n        preventDefault() {\n          e.preventDefault()\n        },\n      })\n    }\n  }\n\n  return (\n    <span className={containerClassName} style={style}>\n      <input\n        ref={inputRef}\n        id={id}\n        className={`${classBlock}__input`}\n        name={name}\n        type='checkbox'\n        checked={realChecked}\n        disabled={disabled}\n        autoFocus={autoFocus}\n        role={role}\n        onChange={handleChange}\n        onClick={handleClick}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      />\n      <span className={`${classBlock}__inner`}>{children}</span>\n    </span>\n  )\n}\n\nCheckbox.defaultProps = defaultProps\n\nexport default Checkbox\n","import React from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport './Block.scss'\nimport Checkbox from '../../components/Checkbox'\n\ntype Props = {\n  back: string\n  front: string\n  mark: string\n  onMouseUp?: (e: React.MouseEvent<HTMLSpanElement>) => void\n  onContextMenu?: (e: React.MouseEvent<HTMLSpanElement>) => void\n  onMouseEnter?: (e: React.MouseEvent<HTMLSpanElement>) => void\n  onMouseLeave?: (e: React.MouseEvent<HTMLSpanElement>) => void\n} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  isMarked: false,\n  isFlipped: false,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst GameBlock: React.FC<Props> = (props) => {\n  const {\n    isFlipped,\n    isMarked,\n    back,\n    front,\n    mark,\n    onMouseUp: handleMouseUp,\n    onContextMenu: handleContextMenu,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n  } = getProps(props)\n\n  return (\n    <span\n      className='mine-sweeper__block'\n      onMouseUp={handleMouseUp}\n      onContextMenu={handleContextMenu}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <Checkbox\n        classBlock='mine-sweeper__checkbox'\n        indeterminate={isMarked}\n        checked={isFlipped}\n      >\n        {isMarked ? mark : isFlipped ? front : back}\n      </Checkbox>\n    </span>\n  )\n}\n\nGameBlock.defaultProps = defaultProps\n\nexport default GameBlock\n","const noop = (...args: any) => {}\n\nexport default noop\n","import React from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport Block from './Block'\nimport { BlockMap } from './initGame'\nimport noop from '../../utils/noop'\n\ntype Props = {\n  blockMap?: BlockMap\n} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  back: '⬜',\n  blank: '◻️',\n  mark: '🚩',\n  bomb: '💣',\n  boom: '💥',\n  rowNum: 10,\n  colNum: 10,\n  bombNum: 10,\n  status: 'ongoing' as 'ongoing' | 'completed' | 'failed',\n  onMouseUp: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n  onContextMenu: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n  onMouseEnter: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n  onMouseLeave: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst classBlock = 'mine-sweeper'\n\nconst numbers = ['', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣']\n\nconst Grid: React.FC<Props> = (props) => {\n  const {\n    back,\n    blank,\n    mark,\n    bomb,\n    boom,\n    rowNum,\n    colNum,\n    blockMap,\n    status,\n    onMouseUp: handleMouseUp,\n    onContextMenu: handleContextMenu,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n  } = getProps(props)\n  const typeMap: any = {\n    ...numbers,\n    [-2]: boom,\n    [-1]: bomb,\n    0: blank,\n  }\n  const rows = []\n\n  if (!blockMap) {\n    // not starting\n    return <div></div>\n  }\n\n  for (let row = 0; row <= rowNum - 1; ++row) {\n    const blocks = []\n\n    for (let col = 0; col <= colNum - 1; ++col) {\n      const block = blockMap[row * colNum + col]\n\n      if (status !== 'ongoing') {\n        block.isFlipped = true\n\n        if (status === 'completed') {\n          if (block.type === -1) {\n            block.isMarked = true\n          }\n        } else {\n          block.isMarked = false\n        }\n      }\n\n      blocks.push(\n        <Block\n          key={`${row}-${col}`}\n          back={back}\n          front={typeMap[block.type]}\n          mark={mark}\n          isMarked={block.isMarked}\n          isFlipped={block.isFlipped}\n          onMouseUp={handleMouseUp.bind(undefined, row, col)}\n          onContextMenu={handleContextMenu.bind(undefined, row, col)}\n          onMouseEnter={handleMouseEnter.bind(undefined, row, col)}\n          onMouseLeave={handleMouseLeave.bind(undefined, row, col)}\n        />,\n      )\n    }\n\n    rows.push(\n      <div key={`${row}`} className={`${classBlock}__row`}>\n        {blocks}\n      </div>,\n    )\n  }\n\n  return <div className={`${classBlock}__grid`}>{rows}</div>\n}\n\nGrid.defaultProps = defaultProps\n\nexport default Grid\n","import React, { Component } from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport './MineSweeper.scss'\nimport initGame, { Game } from './initGame'\nimport spread from './spread'\nimport Grid from './Grid'\n\ninterface State {\n  game: Game\n  isFrigthened: boolean\n}\n\ntype Props = {} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  back: '⬜',\n  blank: '◻️',\n  mark: '🚩',\n  bomb: '💣',\n  boom: '💥',\n  ongoing: '😀',\n  completed: '😎',\n  failed: '😵',\n  frightened: '😬',\n  hovered: '😶',\n  rowNum: 10,\n  colNum: 10,\n  bombNum: 10,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst classBlock = 'mine-sweeper'\n\nexport default class MineSweeper extends Component<Props, State> {\n  static defaultProps = defaultProps\n\n  constructor(props: Props) {\n    super(props)\n\n    const { rowNum, colNum, bombNum } = getProps(props)\n\n    this.state = {\n      game: initGame(rowNum, colNum, bombNum),\n      isFrigthened: false,\n    }\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { rowNum, colNum, bombNum } = this.innerProps\n    const {\n      rowNum: prevRowNum,\n      colNum: prevColNum,\n      bombNum: prevBombNum,\n    } = getProps(prevProps)\n\n    if (\n      rowNum !== prevRowNum ||\n      colNum !== prevColNum ||\n      bombNum !== prevBombNum\n    ) {\n      this.handleInit(rowNum, colNum, bombNum)\n    }\n  }\n\n  handleInit = (rowNum: number, colNum: number, bombNum: number) => {\n    this.setState({\n      game: initGame(rowNum, colNum, bombNum),\n    })\n  }\n\n  handleBlockMouseUp = (row: number, col: number, e: React.MouseEvent) => {\n    const { game } = this.state\n    const { rowNum, colNum, bombNum, blockMap } = game\n    const block = blockMap[row * colNum + col]\n\n    if (game.status !== 'ongoing' || block.isFlipped || block.isMarked) {\n      return\n    }\n\n    // reset face\n    this.setState({\n      isFrigthened: false,\n    })\n\n    // quit if not left button\n    if (e.button !== 0) {\n      return\n    }\n\n    game.stepNum += 1\n\n    if (block.type === -1) {\n      block.type = -2\n      game.status = 'failed'\n      this.forceUpdate()\n      return\n    }\n\n    spread(row, col, game)\n\n    if (game.flippedNum === rowNum * colNum - bombNum) {\n      game.status = 'completed'\n    }\n\n    this.forceUpdate()\n  }\n\n  handleBlockContextMenu = (row: number, col: number, e: React.MouseEvent) => {\n    const { game } = this.state\n    const { colNum, blockMap } = game\n    const block = blockMap[row * colNum + col]\n\n    if (game.status !== 'ongoing' || block.isFlipped) {\n      return\n    }\n\n    block.isMarked = !block.isMarked\n    game.markedNum += block.isMarked ? 1 : -1\n\n    this.forceUpdate()\n  }\n\n  handleBlockMouseEnter = (row: number, col: number, e: React.MouseEvent) => {\n    const { game } = this.state\n    const { colNum, blockMap } = game\n    const block = blockMap[row * colNum + col]\n\n    if (block.isFlipped || block.isMarked) {\n      return\n    }\n\n    this.setState({\n      isFrigthened: true,\n    })\n  }\n\n  handleBlockMouseLeave = (row: number, col: number, e: React.MouseEvent) => {\n    this.setState({\n      isFrigthened: false,\n    })\n  }\n\n  get innerProps() {\n    return getProps(this.props)\n  }\n\n  renderHeader() {\n    const { game, isFrigthened } = this.state\n    const { status } = game\n    const {\n      rowNum,\n      colNum,\n      bombNum,\n      ongoing,\n      completed,\n      failed,\n      frightened,\n      hovered,\n    } = this.innerProps\n    let face = ''\n\n    if (status === 'completed') {\n      face = completed\n    } else if (status === 'failed') {\n      face = failed\n    } else {\n      face = ongoing\n\n      if (isFrigthened) {\n        face = frightened\n      }\n    }\n\n    return (\n      <div\n        className={`${classBlock}__header`}\n        onClick={() => this.handleInit(rowNum, colNum, bombNum)}\n      >\n        <span className={`${classBlock}__status`}>{face}</span>\n        <span\n          className={`${classBlock}__status ${classBlock}__status--hovered`}\n        >\n          {hovered}\n        </span>\n      </div>\n    )\n  }\n\n  renderGrid() {\n    const { back, blank, mark, bomb, boom, rowNum, colNum } = this.innerProps\n    const { game } = this.state\n    const { blockMap, status } = game\n\n    return (\n      <Grid\n        back={back}\n        blank={blank}\n        mark={mark}\n        bomb={bomb}\n        boom={boom}\n        rowNum={rowNum}\n        colNum={colNum}\n        blockMap={blockMap}\n        status={status}\n        onMouseUp={this.handleBlockMouseUp}\n        onContextMenu={this.handleBlockContextMenu}\n        onMouseEnter={this.handleBlockMouseEnter}\n        onMouseLeave={this.handleBlockMouseLeave}\n      />\n    )\n  }\n\n  renderFooter() {\n    const { game } = this.state\n    const { markedNum, stepNum } = game\n    const { bombNum } = this.innerProps\n\n    return (\n      <div className={`${classBlock}__footer`}>\n        <div className={`${classBlock}__bomb-counter`}>\n          <span>\n            {bombNum - markedNum} / {bombNum}\n          </span>\n          <span>BOMBS</span>\n        </div>\n        <div className={`${classBlock}__step-counter`}>\n          <span>{stepNum}</span>\n          <span>STEPS</span>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div\n        className={`${classBlock}`}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        {this.renderHeader()}\n        {this.renderGrid()}\n        {this.renderFooter()}\n      </div>\n    )\n  }\n}\n","import { Game } from './initGame'\n\nexport default function spread(row: number, col: number, game: Game) {\n  const { rowNum, colNum, blockMap } = game\n  const block = blockMap[row * colNum + col]\n\n  if (block.isFlipped || block.type === -1) {\n    return\n  }\n\n  block.isFlipped = true\n  game.flippedNum += 1\n\n  if (block.isMarked) {\n    block.isMarked = false\n    game.markedNum -= 1\n  }\n\n  if (block.type !== 0) {\n    return\n  }\n\n  // left top\n  if (row > 0 && col > 0) {\n    spread(row - 1, col - 1, game)\n  }\n\n  // top\n  if (row > 0) {\n    spread(row - 1, col, game)\n  }\n\n  // right top\n  if (row > 0 && col < colNum - 1) {\n    spread(row - 1, col + 1, game)\n  }\n\n  // left\n  if (col > 0) {\n    spread(row, col - 1, game)\n  }\n\n  // right\n  if (col < colNum - 1) {\n    spread(row, col + 1, game)\n  }\n\n  // left bottom\n  if (row < rowNum - 1 && col > 0) {\n    spread(row + 1, col - 1, game)\n  }\n\n  // bottom\n  if (row < rowNum - 1) {\n    spread(row + 1, col, game)\n  }\n\n  // right bottom\n  if (row < rowNum - 1 && col < colNum - 1) {\n    spread(row + 1, col + 1, game)\n  }\n}\n","import React from 'react'\nimport './App.css'\nimport MineSweeper from './containers/MineSweeper'\n\nconst App: React.FC = () => {\n  return (\n    <div className='app'>\n      <MineSweeper />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}