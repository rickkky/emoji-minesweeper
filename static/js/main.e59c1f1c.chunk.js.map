{"version":3,"sources":["components/emoji/index.tsx","utils/stopwatch/index.ts","utils/stopwatch/Stopwatch.ts","containers/minesweeper/Game.ts","containers/minesweeper/createRandomBombArray.ts","containers/minesweeper/constants.ts","containers/minesweeper/Header.tsx","containers/minesweeper/Block.tsx","utils/noop.ts","containers/minesweeper/Grid.tsx","containers/minesweeper/Footer.tsx","containers/minesweeper/Container.tsx","containers/minesweeper/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["defaultProps","createDefaultProps","children","isTwemoji","getProps","createPropsGetter","Twemoji","props","nodes","index","twemoji","parse","folder","ext","callback","code","options","push","key","className","draggable","alt","convert","fromCodePoint","src","base","size","Emoji","joinClassNames","style","width","height","fontSize","lineHeight","undefined","role","aria-label","Stopwatch","_interval","_maxTime","_time","_timeFlags","_startTime","_restartTime","_endTime","_timeBase","_status","_resolve","_timeout","_tick","isFlag","now","Date","time","emit","timeFlags","startTime","stop","interval","this","Promise","reject","message","setInterval","_setStatus","resolve","clearInterval","endTime","isOvertime","status","prevStatus","value","EventDispenser","Game","_rowNum","_colNum","_bombNum","_markNum","_facecadeNum","_stepNum","_bombArray","_bombNumArray","_itemStatusArray","_stopwatch","_handleTick","event","on","reset","row","col","rowNum","colNum","bombNum","_spread","_start","itemStatusArray","bombArray","bombNumArray","total","deck","i","ri","Math","floor","random","temp","createRandomBombArray","count","start","flip","Error","classBlock","numbers","Header","isScared","smiley","happy","sad","scared","calm","handleClick","onClick","useState","isCalm","setIsCalm","face","onMouseEnter","onMouseLeave","isBomb","Block","back","blank","mark","bomb","boom","handleMouseUp","onMouseUp","handleContextMenu","onContextMenu","handleMouseEnter","handleMouseLeave","myNumbers","0","console","log","noop","Grid","innerProps","rows","blocks","itemStatus","bind","PureComponent","Footer","markNum","stepNum","toFixed","Container","game","handleChange","setState","forceUpdate","handleHeaderClick","evt","preventDefault","handleBlockMouseUp","button","handleBlockContextMenu","handleBlockMouseEnter","handleBlockMouseLeave","state","renderHeader","renderGrid","renderFooter","Component","App","href","rel","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e59c1f1c.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport twemoji from 'twemoji'\nimport { joinClassNames } from 'combine-class-names'\nimport './Emoji.scss'\n\ntype Props = {\n  className?: string\n  size?: number\n} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  children: '',\n  isTwemoji: true,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst Twemoji: React.FC<Props> = (props) => {\n  const { children } = getProps(props)\n  const nodes: React.ReactNode[] = []\n  let index = 0\n\n  twemoji.parse(children, {\n    folder: 'svg',\n    ext: '.svg',\n    callback: (code: string, options: any) => {\n      nodes.push(\n        <img\n          key={index++}\n          className='emoji__twemoji'\n          draggable='false'\n          alt={twemoji.convert.fromCodePoint(code)}\n          src={`${options.base}${options.size}/${code}${options.ext}`}\n        />,\n      )\n      return ''\n    },\n  })\n\n  return <Fragment>{nodes}</Fragment>\n}\n\nTwemoji.defaultProps = defaultProps\n\nconst Emoji: React.FC<Props> = (props) => {\n  const { className, children, isTwemoji, size } = getProps(props)\n\n  return (\n    <span\n      className={joinClassNames(className || '', 'emoji', {\n        'emoji--twemoji': isTwemoji,\n      })}\n      style={\n        size\n          ? {\n              width: `${size}px`,\n              height: `${size}px`,\n              fontSize: `${size}px`,\n              lineHeight: `${size}px`,\n            }\n          : undefined\n      }\n      role='img'\n      aria-label={children}\n    >\n      {isTwemoji ? <Twemoji {...props} /> : children}\n    </span>\n  )\n}\n\nEmoji.defaultProps = defaultProps\n\nexport default Emoji\n","import Stopwatch from './Stopwatch'\n\nexport * from './Stopwatch'\nexport default Stopwatch\n","import EventDispenser from 'event-dispenser'\n\nexport interface TickEvent {\n  time: number\n  timeFlags: number[]\n  startTime: number\n}\n\nexport interface StatusChangeEvent {\n  status: Status\n  prevStatus: Status\n}\n\ninterface EventMap {\n  tick: TickEvent\n  'status-change': StatusChangeEvent\n}\n\ntype Result = {\n  endTime: number\n  isOvertime: boolean\n} & TickEvent\n\ntype Status = 'stopped' | 'ticking' | 'paused'\n\nexport default class Stopwatch extends EventDispenser<EventMap> {\n  private _interval = 64\n\n  private _maxTime: number | undefined\n\n  private _time = 0\n\n  private _timeFlags: number[] = []\n\n  private _startTime = 0\n\n  private _restartTime = 0\n\n  private _endTime = 0\n\n  private _timeBase = 0\n\n  private _status: Status = 'stopped'\n\n  private _resolve: ((value: Result) => void) | undefined\n\n  private _timeout: number | undefined\n\n  constructor(\n    options: {\n      interval?: number\n      maxTime?: number\n    } = {},\n  ) {\n    super()\n\n    if (options.interval) {\n      this.interval = options.interval\n    }\n  }\n\n  get interval() {\n    return this._interval\n  }\n\n  set interval(value: number) {\n    if (value <= 0) {\n      return\n    }\n\n    this._interval = value\n\n    if (this._timeout !== undefined) {\n      clearInterval(this._timeout)\n      this._timeout = setInterval(this._tick, this._interval)\n    }\n  }\n\n  get maxTime() {\n    return this._maxTime\n  }\n\n  set maxTime(value: number | undefined) {\n    if (typeof value === 'number' && value <= this._interval) {\n      return\n    }\n\n    this._maxTime = value\n  }\n\n  get time() {\n    return this._time\n  }\n\n  get timeFlags() {\n    return [...this._timeFlags]\n  }\n\n  get startTime() {\n    return this._startTime\n  }\n\n  get restartTime() {\n    return this._restartTime\n  }\n\n  get status() {\n    return this._status\n  }\n\n  start(interval?: number): Promise<Result> {\n    if (this._status !== 'stopped') {\n      return Promise.reject({\n        message: 'stopwatch should start when stopped',\n      })\n    }\n\n    if (interval) {\n      this.interval = interval\n    }\n\n    const now = Date.now()\n\n    this._time = 0\n    this._timeFlags = []\n    this._startTime = now\n    this._restartTime = now\n    this._endTime = now\n    this._timeBase = 0\n    this._timeout = setInterval(this._tick, this._interval)\n    this._setStatus('ticking')\n\n    return new Promise((resolve, reject) => {\n      this._resolve = resolve\n    })\n  }\n\n  stop() {\n    if (this._status === 'stopped') {\n      return\n    }\n\n    if (this._timeout !== undefined) {\n      clearInterval(this._timeout)\n      this._timeout = undefined\n    }\n\n    if (this._resolve) {\n      this._resolve({\n        time: this._time,\n        timeFlags: [...this._timeFlags, this._time],\n        startTime: this._startTime,\n        endTime: this._endTime,\n        isOvertime: !!(this._maxTime && this._time >= this._maxTime),\n      })\n      this._resolve = undefined\n    }\n\n    this._time = 0\n    this._timeFlags = []\n    this._startTime = 0\n    this._restartTime = 0\n    this._endTime = 0\n    this._timeBase = 0\n    this._setStatus('stopped')\n  }\n\n  pause() {\n    if (this._status !== 'ticking') {\n      return\n    }\n\n    if (this._timeout !== undefined) {\n      clearInterval(this._timeout)\n      this._timeout = undefined\n    }\n\n    this._timeBase += Date.now() - this._restartTime\n    this._setStatus('paused')\n  }\n\n  resume(interval?: number) {\n    if (this._status !== 'paused') {\n      return\n    }\n\n    if (interval) {\n      this.interval = interval\n    }\n\n    this._timeout = setInterval(this._tick, this._interval)\n    this._restartTime = Date.now()\n  }\n\n  private _tick = (isFlag = false) => {\n    if (this._status !== 'ticking') {\n      return\n    }\n\n    const now = Date.now()\n    const time = this._timeBase + now - this._restartTime\n\n    if (isFlag) {\n      this._timeFlags.push(time)\n    }\n\n    this.emit('tick', {\n      time,\n      timeFlags: [...this._timeFlags],\n      startTime: this._startTime,\n    })\n\n    this._time = time\n    this._endTime = now\n\n    if (this._maxTime && time >= this._maxTime) {\n      this.stop()\n    }\n  }\n\n  private _setStatus(status: Status) {\n    if (status === this._status) {\n      return\n    }\n\n    const prevStatus = this._status\n    this._status = status\n\n    this.emit('status-change', { status, prevStatus })\n  }\n}\n","import EventDispenser from 'event-dispenser'\nimport Stopwatch, { TickEvent } from '../../utils/stopwatch'\nimport createRandomBombArray from './createRandomBombArray'\n\nexport type GameStatus = 'pending' | 'ongoing' | 'completed' | 'failed'\n\nexport type BombNum = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8\n\nexport type ItemStatus = 'pending' | 'flipped' | 'marked' | 'detonated'\n\nexport interface GameEventMap {\n  change: undefined\n  'stopwatch-tick': TickEvent\n}\n\ninterface GameProps {\n  rowNum: number\n  colNum: number\n  bombNum: number\n}\n\nexport default class Game extends EventDispenser<GameEventMap> {\n  private _rowNum = 10\n\n  private _colNum = 10\n\n  private _bombNum = 10\n\n  private _status: GameStatus = 'pending'\n\n  private _markNum = 0\n\n  private _facecadeNum = 0\n\n  private _stepNum = 0\n\n  private _time = 0\n\n  private _bombArray: boolean[] = []\n\n  private _bombNumArray: BombNum[] = []\n\n  private _itemStatusArray: ItemStatus[] = []\n\n  private _stopwatch = new Stopwatch()\n\n  private _handleTick = (event: TickEvent) => {\n    this._time = event.time\n    this.emit('change', undefined)\n    this.emit('stopwatch-tick', event)\n  }\n\n  constructor(props?: GameProps) {\n    super()\n\n    this._stopwatch.on('tick', this._handleTick)\n\n    this.reset(props)\n  }\n\n  get rowNum() {\n    return this._rowNum\n  }\n\n  get colNum() {\n    return this._colNum\n  }\n\n  get bombNum() {\n    return this._bombNum\n  }\n\n  get status() {\n    return this._status\n  }\n\n  get markNum() {\n    return this._markNum\n  }\n\n  get facecadeNum() {\n    return this._facecadeNum\n  }\n\n  get stepNum() {\n    return this._stepNum\n  }\n\n  get time() {\n    return this._time\n  }\n\n  get bombArray() {\n    return this._bombArray\n  }\n\n  get bombNumArray() {\n    return this._bombNumArray\n  }\n\n  get itemStatusArray() {\n    return this._itemStatusArray\n  }\n\n  get props() {\n    return {\n      rowNum: this._rowNum,\n      colNum: this._colNum,\n      bombNum: this._bombNum,\n    }\n  }\n\n  set props(value) {\n    const rowNum = Math.floor(value.rowNum)\n    const colNum = Math.floor(value.colNum)\n    const bombNum = Math.floor(value.bombNum)\n    const total = rowNum * colNum\n\n    if (rowNum <= 0 || colNum <= 0 || bombNum <= 0 || bombNum > total) {\n      throw new Error('invalid game props')\n    }\n\n    this._rowNum = rowNum\n    this._colNum = colNum\n    this._bombNum = bombNum\n\n    this.reset()\n  }\n\n  reset(props?: GameProps) {\n    if (props) {\n      this.props = props\n    }\n\n    this._status = 'pending'\n    this._markNum = 0\n    this._facecadeNum = 0\n    this._stepNum = 0\n    this._time = 0\n    this._bombArray = []\n    this._bombNumArray = []\n    this._itemStatusArray = []\n    this._stopwatch.stop()\n\n    this.emit('change', undefined)\n  }\n\n  flip(row: number, col: number) {\n    if (this._status !== 'ongoing') {\n      if (this._status === 'pending') {\n        this._start(row, col)\n      }\n\n      return\n    }\n\n    const { rowNum, colNum, bombNum } = this\n    const index = row * colNum + col\n    const itemStatus = this._itemStatusArray[index]\n\n    if (itemStatus !== 'pending') {\n      return\n    }\n\n    this._stepNum += 1\n\n    if (this._bombArray[index]) {\n      // boom!!!\n      this._status = 'failed'\n      this._itemStatusArray[index] = 'detonated'\n      this._stopwatch.stop()\n    }\n\n    this._spread(row, col)\n\n    if (this._facecadeNum === rowNum * colNum - bombNum) {\n      this._status = 'completed'\n      this._stopwatch.stop()\n    }\n\n    this._itemStatusArray = [...this._itemStatusArray]\n\n    this.emit('change', undefined)\n  }\n\n  mark(row: number, col: number) {\n    if (this._status !== 'ongoing') {\n      return\n    }\n\n    const { colNum, itemStatusArray } = this\n    const index = row * colNum + col\n\n    if (itemStatusArray[index] === 'pending') {\n      itemStatusArray[index] = 'marked'\n      this._markNum += 1\n    } else if (itemStatusArray[index] === 'marked') {\n      itemStatusArray[index] = 'pending'\n      this._markNum -= 1\n    } else {\n      return\n    }\n\n    this._itemStatusArray = [...this._itemStatusArray]\n\n    this.emit('change', undefined)\n  }\n\n  private _spread(row: number, col: number) {\n    const { rowNum, colNum, bombArray, itemStatusArray, bombNumArray } = this\n    const index = row * colNum + col\n\n    if (bombArray[index] || itemStatusArray[index] === 'flipped') {\n      return\n    }\n\n    this._markNum += itemStatusArray[index] === 'marked' ? -1 : 0\n    this._facecadeNum += 1\n    itemStatusArray[index] = 'flipped'\n\n    if (bombNumArray[index] !== 0) {\n      return\n    }\n\n    // left top\n    if (row > 0 && col > 0) {\n      this._spread(row - 1, col - 1)\n    }\n\n    // top\n    if (row > 0) {\n      this._spread(row - 1, col)\n    }\n\n    // right top\n    if (row > 0 && col < colNum - 1) {\n      this._spread(row - 1, col + 1)\n    }\n\n    // left\n    if (col > 0) {\n      this._spread(row, col - 1)\n    }\n\n    // right\n    if (col < colNum - 1) {\n      this._spread(row, col + 1)\n    }\n\n    // left bottom\n    if (row < rowNum - 1 && col > 0) {\n      this._spread(row + 1, col - 1)\n    }\n\n    // bottom\n    if (row < rowNum - 1) {\n      this._spread(row + 1, col)\n    }\n\n    // right bottom\n    if (row < rowNum - 1 && col < colNum - 1) {\n      this._spread(row + 1, col + 1)\n    }\n  }\n\n  private _start(row: number, col: number) {\n    const { rowNum, colNum, bombNum } = this\n    const bombArray = createRandomBombArray({\n      rowNum: rowNum,\n      colNum: colNum,\n      bombNum: bombNum,\n      row,\n      col,\n    })\n    const itemStatusArray: ItemStatus[] = []\n    const bombNumArray: BombNum[] = []\n\n    for (let row = 0; row < this._rowNum; ++row) {\n      for (let col = 0; col < this._colNum; ++col) {\n        const index = row * this._colNum + col\n\n        itemStatusArray[index] = 'pending'\n\n        let count = 0\n\n        // left top\n        if (row > 0 && col > 0) {\n          count += bombArray[(row - 1) * colNum + col - 1] ? 1 : 0\n        }\n\n        // top\n        if (row > 0) {\n          count += bombArray[(row - 1) * colNum + col] ? 1 : 0\n        }\n\n        // right top\n        if (row > 0 && col < colNum - 1) {\n          count += bombArray[(row - 1) * colNum + col + 1] ? 1 : 0\n        }\n\n        // left\n        if (col > 0) {\n          count += bombArray[row * colNum + col - 1] ? 1 : 0\n        }\n\n        // right\n        if (col < colNum - 1) {\n          count += bombArray[row * colNum + col + 1] ? 1 : 0\n        }\n\n        // left bottom\n        if (row < rowNum - 1 && col > 0) {\n          count += bombArray[(row + 1) * colNum + col - 1] ? 1 : 0\n        }\n\n        // bottom\n        if (row < rowNum - 1) {\n          count += bombArray[(row + 1) * colNum + col] ? 1 : 0\n        }\n\n        // right bottom\n        if (row < rowNum - 1 && col < colNum - 1) {\n          count += bombArray[(row + 1) * colNum + col + 1] ? 1 : 0\n        }\n\n        bombNumArray[index] = count as BombNum\n      }\n    }\n\n    this._status = 'ongoing'\n    this._bombArray = bombArray\n    this._itemStatusArray = itemStatusArray\n    this._bombNumArray = bombNumArray\n    this._stopwatch.start()\n    this.flip(row, col)\n  }\n}\n","export default function createRandomBombArray(options: {\n  rowNum: number\n  colNum: number\n  bombNum: number\n  row: number\n  col: number\n}) {\n  const { rowNum, colNum, bombNum, row, col } = options\n  const total = rowNum * colNum\n  const deck: boolean[] = []\n\n  // create an array with a specific number of bombNum\n  for (let i = 0; i < total; ++i) {\n    if (i < bombNum) {\n      deck.push(true)\n    } else {\n      deck.push(false)\n    }\n  }\n\n  // shuffle array\n  for (let i = 0; i < total; ++i) {\n    const ri = Math.floor(Math.random() * (total - 1))\n    const temp = deck[i]\n\n    deck[i] = deck[ri]\n    deck[ri] = temp\n  }\n\n  const index = row * colNum + col\n\n  // the seed block should not be bomb\n  for (let i = index; i !== index - 1; ++i) {\n    if (!deck[i]) {\n      deck[i] = true\n      deck[index] = false\n\n      break\n    }\n\n    if (i >= total - 1) {\n      i = -1\n    }\n  }\n\n  return deck\n}\n","export const classBlock = 'minesweeper'\n\nexport const numbers = ['', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣']\n","import React, { useState } from 'react'\nimport { GameStatus } from './Game'\nimport { classBlock } from './constants'\nimport Emoji from '../../components/emoji'\n\ntype Props = {\n  status: GameStatus\n  isScared: boolean\n  smiley: string\n  happy: string\n  sad: string\n  scared: string\n  calm: string\n  onClick: (e: React.MouseEvent) => void\n}\n\nconst Header: React.FC<Props> = (props) => {\n  const {\n    status,\n    isScared,\n    smiley,\n    happy,\n    sad,\n    scared,\n    calm,\n    onClick: handleClick,\n  } = props\n\n  const [isCalm, setIsCalm] = useState(false)\n\n  let face = smiley\n\n  if (isCalm) {\n    face = calm\n  } else if (isScared) {\n    face = scared\n  } else if (status === 'failed') {\n    face = sad\n  } else if (status === 'completed') {\n    face = happy\n  }\n\n  return (\n    <div\n      className={`${classBlock}__header`}\n      onClick={handleClick}\n      onMouseEnter={() => setIsCalm(true)}\n      onMouseLeave={() => setIsCalm(false)}\n    >\n      <Emoji isTwemoji>{face}</Emoji>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport { ItemStatus, BombNum } from './Game'\nimport { classBlock, numbers } from './constants'\nimport Emoji from '../../components/emoji'\n\ntype Props = {\n  back: string\n  blank: string\n  mark: string\n  bomb: string\n  boom: string\n  onMouseUp?: (e: React.MouseEvent<HTMLSpanElement>) => void\n  onContextMenu?: (e: React.MouseEvent<HTMLSpanElement>) => void\n  onMouseEnter?: (e: React.MouseEvent<HTMLSpanElement>) => void\n  onMouseLeave?: (e: React.MouseEvent<HTMLSpanElement>) => void\n} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  isBomb: false,\n  bombNum: 0 as BombNum,\n  status: 'pending' as ItemStatus,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst Block: React.FC<Props> = (props) => {\n  const {\n    isBomb,\n    bombNum,\n    status,\n    back,\n    blank,\n    mark,\n    bomb,\n    boom,\n    onMouseUp: handleMouseUp,\n    onContextMenu: handleContextMenu,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n  } = getProps(props)\n  const myNumbers = { ...numbers, 0: blank }\n\n  console.log(status)\n\n  return (\n    <span\n      className={`${classBlock}__block ${classBlock}__block--${status}`}\n      onMouseUp={handleMouseUp}\n      onContextMenu={handleContextMenu}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <Emoji isTwemoji>\n        {status === 'pending'\n          ? back\n          : status === 'marked'\n          ? mark\n          : status === 'detonated'\n          ? boom\n          : isBomb\n          ? bomb\n          : (myNumbers as any)[bombNum]}\n      </Emoji>\n    </span>\n  )\n}\n\nBlock.defaultProps = defaultProps\n\nexport default Block\n","const noop = (...args: any) => {}\n\nexport default noop\n","import React, { PureComponent } from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport { GameStatus, BombNum, ItemStatus } from './Game'\nimport Block from './Block'\nimport { classBlock } from './constants'\nimport noop from '../../utils/noop'\n\ntype Props = {\n  rowNum: number\n  colNum: number\n  status: GameStatus\n  bombArray: boolean[]\n  bombNumArray: BombNum[]\n  itemStatusArray: ItemStatus[]\n  back: string\n  blank: string\n  mark: string\n  bomb: string\n  boom: string\n} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  onMouseUp: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n  onContextMenu: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n  onMouseEnter: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n  onMouseLeave: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nexport default class Grid extends PureComponent<Props> {\n  static defaultProps = defaultProps\n\n  get innerProps() {\n    return getProps(this.props)\n  }\n\n  render() {\n    const {\n      rowNum,\n      colNum,\n      status,\n      bombArray,\n      bombNumArray,\n      itemStatusArray,\n      back,\n      blank,\n      mark,\n      bomb,\n      boom,\n      onMouseUp: handleMouseUp,\n      onContextMenu: handleContextMenu,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n    } = this.innerProps\n\n    const rows = []\n\n    for (let row = 0; row < rowNum; ++row) {\n      const blocks = []\n\n      for (let col = 0; col < colNum; ++col) {\n        const index = row * colNum + col\n        const isBomb = bombArray[index]\n        const bombNum = bombNumArray[index]\n        let itemStatus = itemStatusArray[index]\n\n        if (status === 'completed') {\n          if (isBomb) {\n            itemStatus = 'marked'\n          } else {\n            itemStatus = 'flipped'\n          }\n        } else if (status === 'failed') {\n          if (itemStatus !== 'detonated') {\n            itemStatus = 'flipped'\n          }\n        }\n\n        blocks.push(\n          <Block\n            key={`${row}-${col}`}\n            isBomb={isBomb}\n            bombNum={bombNum}\n            status={itemStatus}\n            back={back}\n            blank={blank}\n            mark={mark}\n            bomb={bomb}\n            boom={boom}\n            onMouseUp={handleMouseUp.bind(undefined, row, col)}\n            onContextMenu={handleContextMenu.bind(undefined, row, col)}\n            onMouseEnter={handleMouseEnter.bind(undefined, row, col)}\n            onMouseLeave={handleMouseLeave.bind(undefined, row, col)}\n          />,\n        )\n      }\n\n      rows.push(\n        <div key={`${row}`} className={`${classBlock}__row`}>\n          {blocks}\n        </div>,\n      )\n    }\n\n    return <div className={`${classBlock}__grid`}>{rows}</div>\n  }\n}\n","import React from 'react'\nimport { classBlock } from './constants'\n\ntype Props = {\n  bombNum: number\n  markNum: number\n  stepNum: number\n  time: number\n}\n\nconst Footer: React.FC<Props> = (props) => {\n  const { bombNum, markNum, stepNum, time } = props\n\n  return (\n    <div className={`${classBlock}__footer`}>\n      <div className={`${classBlock}__bomb-counter`}>\n        <span>\n          {bombNum - markNum} / {bombNum}\n        </span>\n        <span>BOMBS</span>\n      </div>\n      <div className={`${classBlock}__step-counter`}>\n        <span>{stepNum}</span>\n        <span>STEPS</span>\n      </div>\n      <div className={`${classBlock}__time-counter`}>\n        <span>{(time / 1000).toFixed(3)}</span>\n        <span>TIME</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport Game from './Game'\nimport Header from './Header'\nimport Grid from './Grid'\nimport Footer from './Footer'\nimport { classBlock } from './constants'\n\ninterface State {\n  isScared: boolean\n}\n\ntype Props = {} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  back: '⬜',\n  blank: '◻️',\n  mark: '🚩',\n  bomb: '💣',\n  boom: '💥',\n  smiley: '😀',\n  happy: '😎',\n  sad: '😵',\n  scared: '😬',\n  calm: '😶',\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nexport default class Container extends Component<Props, State> {\n  static defaultProps = defaultProps\n\n  game = new Game()\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      isScared: false,\n    }\n\n    this.game.on('change', this.handleChange)\n  }\n\n  handleChange = () => {\n    this.setState({ isScared: false })\n    this.forceUpdate()\n  }\n\n  handleHeaderClick = () => {\n    this.game.reset()\n  }\n\n  handleContextMenu = (evt: React.MouseEvent) => {\n    evt.preventDefault()\n  }\n\n  handleBlockMouseUp = (row: number, col: number, evt: React.MouseEvent) => {\n    // quit if not left button\n    if (evt.button !== 0) {\n      return\n    }\n\n    this.game.flip(row, col)\n  }\n\n  handleBlockContextMenu = (\n    row: number,\n    col: number,\n    evt: React.MouseEvent,\n  ) => {\n    this.game.mark(row, col)\n  }\n\n  handleBlockMouseEnter = (row: number, col: number, evt: React.MouseEvent) => {\n    const { colNum, status, itemStatusArray } = this.game\n\n    this.setState({\n      isScared:\n        status === 'pending' ||\n        (status === 'ongoing' &&\n          itemStatusArray[row * colNum + col] === 'pending'),\n    })\n  }\n\n  handleBlockMouseLeave = (row: number, col: number, evt: React.MouseEvent) => {\n    this.setState({ isScared: false })\n  }\n\n  get innerProps() {\n    return getProps(this.props)\n  }\n\n  renderHeader() {\n    const { smiley, happy, sad, scared, calm } = this.innerProps\n\n    return (\n      <Header\n        status={this.game.status}\n        isScared={this.state.isScared}\n        smiley={smiley}\n        happy={happy}\n        sad={sad}\n        scared={scared}\n        calm={calm}\n        onClick={this.handleHeaderClick}\n      />\n    )\n  }\n\n  renderGrid() {\n    const { back, blank, mark, bomb, boom } = this.innerProps\n    const {\n      rowNum,\n      colNum,\n      status,\n      bombArray,\n      bombNumArray,\n      itemStatusArray,\n    } = this.game\n\n    return (\n      <Grid\n        rowNum={rowNum}\n        colNum={colNum}\n        status={status}\n        bombArray={bombArray}\n        bombNumArray={bombNumArray}\n        itemStatusArray={itemStatusArray}\n        back={back}\n        blank={blank}\n        mark={mark}\n        bomb={bomb}\n        boom={boom}\n        onMouseUp={this.handleBlockMouseUp}\n        onContextMenu={this.handleBlockContextMenu}\n        onMouseEnter={this.handleBlockMouseEnter}\n        onMouseLeave={this.handleBlockMouseLeave}\n      />\n    )\n  }\n\n  renderFooter() {\n    const { bombNum, markNum, stepNum, time } = this.game\n\n    return (\n      <Footer\n        bombNum={bombNum}\n        markNum={markNum}\n        stepNum={stepNum}\n        time={time}\n      />\n    )\n  }\n\n  render() {\n    const { status } = this.game\n\n    return (\n      <div\n        className={`${classBlock} ${classBlock}--${status}`}\n        onContextMenu={this.handleContextMenu}\n      >\n        {this.renderHeader()}\n        {this.renderGrid()}\n        {this.renderFooter()}\n      </div>\n    )\n  }\n}\n","import Container from './Container'\nimport './styles/index.scss'\n\nexport default Container\n","import React from 'react'\nimport './App.scss'\nimport Emoji from './components/emoji'\nimport Minesweeper from './containers/minesweeper'\n\nconst App: React.FC = () => {\n  return (\n    <div className='app'>\n      <div className='app__content'>\n        <Minesweeper />\n      </div>\n      <div className='app__footer'>\n        <a\n          href='https://github.com/rickkky/emoji-minesweeper--react'\n          rel='noopener noreferrer'\n          target='_blank'\n        >\n          <Emoji size={20}>{'🤓'}</Emoji>\n          <span>&nbsp; SOURCE CODE &nbsp;</span>\n          <Emoji size={20}>{'🤓'}</Emoji>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}