{"version":3,"sources":["containers/minesweeper/game.ts","utils/noop.ts","containers/minesweeper/Header.tsx","components/checkbox/index.tsx","containers/minesweeper/Block.tsx","containers/minesweeper/Grid.tsx","utils/stopwatch/index.ts","utils/stopwatch/Stopwatch.ts","containers/minesweeper/Minesweeper.tsx","containers/minesweeper/spread.tsx","containers/minesweeper/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["createEmptyGame","rowNum","colNum","bombNum","Math","floor","totalNum","Error","blockMap","undefined","flippedNum","markedNum","stepNum","time","status","createBlockMap","options","bombMap","seedRow","seedCol","i","push","ri","random","temp","index","createBombMap","row","col","type","isMarked","isFlipped","count","noop","defaultProps","createDefaultProps","onClick","getProps","createPropsGetter","Header","props","classBlock","ongoing","completed","failed","frightened","hovered","isFrightened","handleClick","face","className","defaultChecked","indeterminate","Checkbox","id","style","role","name","checked","disabled","autoFocus","inputRef","children","onChange","handleFocus","onFocus","handleBlur","onBlur","useState","innerChecked","setInnerChecked","realChecked","containerClassName","combineClassNames","join","ref","e","target","nativeEvent","stopPropagation","preventDefault","GameBlock","back","front","mark","handleMouseUp","onMouseUp","handleContextMenu","onContextMenu","handleMouseEnter","onMouseEnter","handleMouseLeave","onMouseLeave","numbers","Grid","this","innerProps","blank","bomb","boom","typeMap","rows","blocks","block","Block","key","bind","PureComponent","Stopwatch","_interval","_maxTime","_time","_timeFlags","_startTime","_restartTime","_endTime","_timeBase","_status","_resolve","_timeout","_tick","isFlag","now","Date","emit","timeFlags","startTime","stop","interval","Promise","reject","message","setInterval","_setStatus","resolve","clearInterval","endTime","isOvertime","prevStatus","value","EventDispenser","Minesweeper","stopwatch","handleHeaderClick","setState","handleBlockSpread","prevState","handleStopwatchTick","handleBlockMouseUp","button","state","start","spread","handler","handleBlockContextMenu","handleBlockMouseEnter","handleBlockMouseLeave","on","prevProps","prevRowNum","prevColNum","prevBombNum","gridProps","toFixed","renderHeader","renderGrid","renderFooter","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e33dd9f2.chunk.js","sourcesContent":["export type GameStatus = 'ongoing' | 'completed' | 'failed'\n\nexport type BlockType = -2 | -1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8\n\nexport interface BlockState {\n  type: BlockType\n  isMarked: boolean\n  isFlipped: boolean\n}\n\nexport type BlockMap = BlockState[]\n\ninterface Options {\n  rowNum: number\n  colNum: number\n  bombNum: number\n  totalNum: number\n  seedRow: number\n  seedCol: number\n}\n\nexport function createEmptyGame(\n  rowNum: number,\n  colNum: number,\n  bombNum: number,\n) {\n  rowNum = Math.floor(rowNum)\n  colNum = Math.floor(colNum)\n  bombNum = Math.floor(bombNum)\n\n  const totalNum = rowNum * colNum\n\n  if (rowNum <= 0 || colNum <= 0 || bombNum <= 0 || bombNum > totalNum) {\n    throw new Error('invalid game params')\n  }\n\n  return {\n    rowNum,\n    colNum,\n    bombNum,\n    totalNum,\n    blockMap: undefined,\n    flippedNum: 0,\n    markedNum: 0,\n    stepNum: 0,\n    time: 0,\n    status: 'ongoing' as GameStatus,\n  }\n}\n\nexport function createBlockMap(options: Options) {\n  const { rowNum, colNum } = options\n  const bombMap = createBombMap(options)\n  const blockMap = []\n\n  for (let row = 0; row < rowNum; ++row) {\n    for (let col = 0; col < colNum; ++col) {\n      const index = row * colNum + col\n\n      if (bombMap[index]) {\n        blockMap[index] = {\n          type: -1,\n          isMarked: false,\n          isFlipped: false,\n        }\n        continue\n      }\n\n      let count = 0\n\n      // left top\n      if (row > 0 && col > 0) {\n        count += bombMap[(row - 1) * colNum + col - 1] ? 1 : 0\n      }\n\n      // top\n      if (row > 0) {\n        count += bombMap[(row - 1) * colNum + col] ? 1 : 0\n      }\n\n      // right top\n      if (row > 0 && col < colNum - 1) {\n        count += bombMap[(row - 1) * colNum + col + 1] ? 1 : 0\n      }\n\n      // left\n      if (col > 0) {\n        count += bombMap[row * colNum + col - 1] ? 1 : 0\n      }\n\n      // right\n      if (col < colNum - 1) {\n        count += bombMap[row * colNum + col + 1] ? 1 : 0\n      }\n\n      // left bottom\n      if (row < rowNum - 1 && col > 0) {\n        count += bombMap[(row + 1) * colNum + col - 1] ? 1 : 0\n      }\n\n      // bottom\n      if (row < rowNum - 1) {\n        count += bombMap[(row + 1) * colNum + col] ? 1 : 0\n      }\n\n      // right bottom\n      if (row < rowNum - 1 && col < colNum - 1) {\n        count += bombMap[(row + 1) * colNum + col + 1] ? 1 : 0\n      }\n\n      blockMap[index] = {\n        type: count,\n        isMarked: false,\n        isFlipped: false,\n      }\n    }\n  }\n\n  return blockMap as BlockMap\n}\n\nfunction createBombMap(options: Options) {\n  const { colNum, bombNum, totalNum, seedRow, seedCol } = options\n  const bombMap: boolean[] = []\n\n  // create an array with a specific number of bombs\n  for (let i = 0; i < totalNum; ++i) {\n    if (i < bombNum) {\n      bombMap.push(true)\n    } else {\n      bombMap.push(false)\n    }\n  }\n\n  // shuffle array\n  for (let i = 0; i < totalNum; ++i) {\n    const ri = Math.floor(Math.random() * (totalNum - 1))\n    const temp = bombMap[i]\n    bombMap[i] = bombMap[ri]\n    bombMap[ri] = temp\n  }\n\n  const index = seedRow * colNum + seedCol\n\n  // the seed block should not be bomb\n  for (let i = index; i !== index - 1; ++i) {\n    if (!bombMap[i]) {\n      bombMap[i] = true\n      bombMap[index] = false\n      return bombMap\n    }\n\n    if (i >= totalNum - 1) {\n      i = -1\n    }\n  }\n\n  return bombMap\n}\n","const noop = (...args: any) => {}\n\nexport default noop\n","import React from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport noop from '../../utils/noop'\n\ntype Props = {\n  classBlock: string\n  ongoing: string\n  completed: string\n  failed: string\n  frightened: string\n  hovered: string\n  status: 'ongoing' | 'completed' | 'failed'\n  isFrightened: boolean\n} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  onClick: noop as (e: React.MouseEvent<HTMLDivElement>) => void,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst Header: React.FC<Props> = (props) => {\n  const {\n    classBlock,\n    ongoing,\n    completed,\n    failed,\n    frightened,\n    hovered,\n    status,\n    isFrightened,\n    onClick: handleClick,\n  } = getProps(props)\n\n  let face = ''\n\n  if (status === 'completed') {\n    face = completed\n  } else if (status === 'failed') {\n    face = failed\n  } else {\n    face = ongoing\n\n    if (isFrightened) {\n      face = frightened\n    }\n  }\n\n  return (\n    <div className={`${classBlock}__header`} onClick={handleClick}>\n      <span className={`${classBlock}__status`}>{face}</span>\n      <span className={`${classBlock}__status ${classBlock}__status--hovered`}>\n        {hovered}\n      </span>\n    </div>\n  )\n}\n\nHeader.defaultProps = defaultProps\n\nexport default Header\n","import React, { useState } from 'react'\nimport createPropsGetter, {\n  createDefaultProps,\n  WithDefault,\n} from 'create-props-getter'\nimport combineClassNames from 'combine-class-names'\nimport './Checkbox.scss'\n\nexport interface CheckboxChangeEvent {\n  target: CheckboxInnerProps\n  nativeEvent: Event\n  stopPropagation: () => void\n  preventDefault: () => void\n}\n\nexport type CheckboxProps = Props\n\nexport interface CheckboxInnerProps\n  extends WithDefault<Props, typeof defaultProps> {\n  checked: boolean\n}\n\ninterface Props extends Partial<typeof defaultProps> {\n  id?: string\n  className?: string\n  style?: React.CSSProperties\n  checked?: boolean\n  role?: string\n  name?: string\n  disabled?: boolean\n  autoFocus?: boolean\n  inputRef?: React.RefObject<HTMLInputElement>\n  children?: React.ReactNode\n  onChange?: (e: CheckboxChangeEvent) => void\n  onClick?: (e: React.MouseEvent<HTMLInputElement>) => void\n  onFocus?: (e: React.FocusEvent<HTMLInputElement>) => void\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void\n}\n\nconst defaultProps = createDefaultProps({\n  classBlock: 'ric-checkbox',\n  defaultChecked: false,\n  indeterminate: false,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst Checkbox: React.FC<Props> = (props: Props) => {\n  const {\n    id,\n    className,\n    classBlock,\n    style,\n    role,\n    name,\n    defaultChecked,\n    checked,\n    indeterminate,\n    disabled,\n    autoFocus,\n    inputRef,\n    children,\n    onChange,\n    onClick: handleClick,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n  } = getProps(props)\n\n  const [innerChecked, setInnerChecked] = useState(\n    indeterminate\n      ? true\n      : typeof checked === 'boolean'\n      ? checked\n      : defaultChecked,\n  )\n\n  const realChecked = indeterminate\n    ? true\n    : typeof checked === 'boolean'\n    ? checked\n    : innerChecked\n\n  const containerClassName = combineClassNames(\n    className || '',\n    `${classBlock}`,\n    {\n      [`${classBlock}--checked`]: realChecked,\n      [`${classBlock}--indeterminate`]: indeterminate,\n      [`${classBlock}--disabled`]: !!disabled,\n    },\n  ).join(' ')\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (disabled) {\n      return\n    }\n\n    if (!(typeof checked === 'boolean')) {\n      setInnerChecked(e.target.checked)\n    }\n\n    if (onChange) {\n      onChange({\n        target: {\n          ...getProps(props),\n          checked: e.target.checked,\n        },\n        nativeEvent: e.nativeEvent,\n        stopPropagation() {\n          e.stopPropagation()\n        },\n        preventDefault() {\n          e.preventDefault()\n        },\n      })\n    }\n  }\n\n  return (\n    <span className={containerClassName} style={style}>\n      <input\n        ref={inputRef}\n        id={id}\n        className={`${classBlock}__input`}\n        name={name}\n        type='checkbox'\n        checked={realChecked}\n        disabled={disabled}\n        autoFocus={autoFocus}\n        role={role}\n        onChange={handleChange}\n        onClick={handleClick}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      />\n      <span className={`${classBlock}__inner`}>{children}</span>\n    </span>\n  )\n}\n\nCheckbox.defaultProps = defaultProps\n\nexport default Checkbox\n","import React from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport Checkbox from '../../components/checkbox'\n\ntype Props = {\n  classBlock: string\n  back: string\n  front: string\n  mark: string\n  onMouseUp?: (e: React.MouseEvent<HTMLSpanElement>) => void\n  onContextMenu?: (e: React.MouseEvent<HTMLSpanElement>) => void\n  onMouseEnter?: (e: React.MouseEvent<HTMLSpanElement>) => void\n  onMouseLeave?: (e: React.MouseEvent<HTMLSpanElement>) => void\n} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  isMarked: false,\n  isFlipped: false,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst GameBlock: React.FC<Props> = (props) => {\n  const {\n    classBlock,\n    isFlipped,\n    isMarked,\n    back,\n    front,\n    mark,\n    onMouseUp: handleMouseUp,\n    onContextMenu: handleContextMenu,\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n  } = getProps(props)\n\n  return (\n    <span\n      className={`${classBlock}__block`}\n      onMouseUp={handleMouseUp}\n      onContextMenu={handleContextMenu}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <Checkbox\n        classBlock={`${classBlock}__checkbox`}\n        indeterminate={isMarked}\n        checked={isFlipped}\n      >\n        {isMarked ? mark : isFlipped ? front : back}\n      </Checkbox>\n    </span>\n  )\n}\n\nGameBlock.defaultProps = defaultProps\n\nexport default GameBlock\n","import React, { PureComponent } from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport Block from './Block'\nimport { BlockMap } from './game'\nimport noop from '../../utils/noop'\n\ntype Props = {\n  classBlock: string\n  back: string\n  blank: string\n  mark: string\n  bomb: string\n  boom: string\n  rowNum: number\n  colNum: number\n  status: 'ongoing' | 'completed' | 'failed'\n  blockMap?: BlockMap\n} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  onMouseUp: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n  onContextMenu: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n  onMouseEnter: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n  onMouseLeave: noop as (\n    row: number,\n    col: number,\n    e: React.MouseEvent<HTMLSpanElement>,\n  ) => void,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst numbers = ['', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣']\n\nexport default class Grid extends PureComponent<Props> {\n  static defaultProps = defaultProps\n\n  get innerProps() {\n    return getProps(this.props)\n  }\n\n  render() {\n    const {\n      classBlock,\n      back,\n      blank,\n      mark,\n      bomb,\n      boom,\n      rowNum,\n      colNum,\n      status,\n      blockMap,\n      onMouseUp: handleMouseUp,\n      onContextMenu: handleContextMenu,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n    } = this.innerProps\n    const typeMap: any = {\n      ...numbers,\n      [-2]: boom,\n      [-1]: bomb,\n      0: blank,\n    }\n    const rows = []\n\n    for (let row = 0; row <= rowNum - 1; ++row) {\n      const blocks = []\n\n      for (let col = 0; col <= colNum - 1; ++col) {\n        if (!blockMap) {\n          blocks.push(\n            <Block\n              key={`${row}-${col}`}\n              classBlock={classBlock}\n              back={back}\n              front={back}\n              mark={mark}\n              isMarked={false}\n              isFlipped={false}\n              onMouseUp={handleMouseUp.bind(undefined, row, col)}\n              onMouseEnter={handleMouseEnter.bind(undefined, row, col)}\n              onMouseLeave={handleMouseLeave.bind(undefined, row, col)}\n            />,\n          )\n          continue\n        }\n\n        const block = blockMap[row * colNum + col]\n\n        if (status !== 'ongoing') {\n          block.isFlipped = true\n\n          if (status === 'completed') {\n            if (block.type === -1) {\n              block.isMarked = true\n            }\n          } else {\n            block.isMarked = false\n          }\n        }\n\n        blocks.push(\n          <Block\n            key={`${row}-${col}`}\n            classBlock={classBlock}\n            back={back}\n            front={typeMap[block.type]}\n            mark={mark}\n            isMarked={block.isMarked}\n            isFlipped={block.isFlipped}\n            onMouseUp={handleMouseUp.bind(undefined, row, col)}\n            onContextMenu={handleContextMenu.bind(undefined, row, col)}\n            onMouseEnter={handleMouseEnter.bind(undefined, row, col)}\n            onMouseLeave={handleMouseLeave.bind(undefined, row, col)}\n          />,\n        )\n      }\n\n      rows.push(\n        <div key={`${row}`} className={`${classBlock}__row`}>\n          {blocks}\n        </div>,\n      )\n    }\n\n    return <div className={`${classBlock}__grid`}>{rows}</div>\n  }\n}\n","import Stopwatch from './Stopwatch'\n\nexport default Stopwatch\n","import EventDispenser from 'event-dispenser'\n\ninterface TickEvent {\n  time: number\n  timeFlags: number[]\n  startTime: number\n}\n\ninterface StatusChangeEvent {\n  status: Status\n  prevStatus: Status\n}\n\ninterface EventMap {\n  tick: TickEvent\n  'status-change': StatusChangeEvent\n}\n\ntype Result = {\n  endTime: number\n  isOvertime: boolean\n} & TickEvent\n\ntype Status = 'stopped' | 'ticking' | 'paused'\n\nexport default class Stopwatch extends EventDispenser<EventMap> {\n  private _interval = 64\n\n  private _maxTime: number | undefined\n\n  private _time = 0\n\n  private _timeFlags: number[] = []\n\n  private _startTime = 0\n\n  private _restartTime = 0\n\n  private _endTime = 0\n\n  private _timeBase = 0\n\n  private _status: Status = 'stopped'\n\n  private _resolve: ((value: Result) => void) | undefined\n\n  private _timeout: number | undefined\n\n  constructor(\n    options: {\n      interval?: number\n      maxTime?: number\n    } = {},\n  ) {\n    super()\n\n    if (options.interval) {\n      this.interval = options.interval\n    }\n  }\n\n  get interval() {\n    return this._interval\n  }\n\n  set interval(value: number) {\n    if (value <= 0) {\n      return\n    }\n\n    this._interval = value\n\n    if (this._timeout !== undefined) {\n      clearInterval(this._timeout)\n      this._timeout = setInterval(this._tick, this._interval)\n    }\n  }\n\n  get maxTime() {\n    return this._maxTime\n  }\n\n  set maxTime(value: number | undefined) {\n    if (typeof value === 'number' && value <= this._interval) {\n      return\n    }\n\n    this._maxTime = value\n  }\n\n  get time() {\n    return this._time\n  }\n\n  get timeFlags() {\n    return [...this._timeFlags]\n  }\n\n  get startTime() {\n    return this._startTime\n  }\n\n  get restartTime() {\n    return this._restartTime\n  }\n\n  get status() {\n    return this._status\n  }\n\n  start(interval?: number): Promise<Result> {\n    if (this._status !== 'stopped') {\n      return Promise.reject({\n        message: 'stopwatch should start when stopped',\n      })\n    }\n\n    if (interval) {\n      this.interval = interval\n    }\n\n    const now = Date.now()\n\n    this._time = 0\n    this._timeFlags = []\n    this._startTime = now\n    this._restartTime = now\n    this._endTime = now\n    this._timeBase = 0\n    this._timeout = setInterval(this._tick, this._interval)\n    this._setStatus('ticking')\n\n    return new Promise((resolve, reject) => {\n      this._resolve = resolve\n    })\n  }\n\n  stop() {\n    if (this._status === 'stopped') {\n      return\n    }\n\n    if (this._timeout !== undefined) {\n      clearInterval(this._timeout)\n      this._timeout = undefined\n    }\n\n    if (this._resolve) {\n      this._resolve({\n        time: this._time,\n        timeFlags: [...this._timeFlags, this._time],\n        startTime: this._startTime,\n        endTime: this._endTime,\n        isOvertime: !!(this._maxTime && this._time >= this._maxTime),\n      })\n      this._resolve = undefined\n    }\n\n    this._time = 0\n    this._timeFlags = []\n    this._startTime = 0\n    this._restartTime = 0\n    this._endTime = 0\n    this._timeBase = 0\n    this._setStatus('stopped')\n  }\n\n  pause() {\n    if (this._status !== 'ticking') {\n      return\n    }\n\n    if (this._timeout !== undefined) {\n      clearInterval(this._timeout)\n      this._timeout = undefined\n    }\n\n    this._timeBase += Date.now() - this._restartTime\n    this._setStatus('paused')\n  }\n\n  resume(interval?: number) {\n    if (this._status !== 'paused') {\n      return\n    }\n\n    if (interval) {\n      this.interval = interval\n    }\n\n    this._timeout = setInterval(this._tick, this._interval)\n    this._restartTime = Date.now()\n  }\n\n  private _tick = (isFlag = false) => {\n    if (this._status !== 'ticking') {\n      return\n    }\n\n    const now = Date.now()\n    const time = this._timeBase + now - this._restartTime\n\n    if (isFlag) {\n      this._timeFlags.push(time)\n    }\n\n    this.emit('tick', {\n      time,\n      timeFlags: [...this._timeFlags],\n      startTime: this._startTime,\n    })\n\n    this._time = time\n    this._endTime = now\n\n    if (this._maxTime && time >= this._maxTime) {\n      this.stop()\n    }\n  }\n\n  private _setStatus(status: Status) {\n    if (status === this._status) {\n      return\n    }\n\n    const prevStatus = this._status\n    this._status = status\n\n    this.emit('status-change', { status, prevStatus })\n  }\n}\n","import React, { Component } from 'react'\nimport { createPropsGetter, createDefaultProps } from 'create-props-getter'\nimport {\n  createEmptyGame,\n  createBlockMap,\n  GameStatus,\n  BlockMap,\n  BlockState,\n} from './game'\nimport spread from './spread'\nimport Header from './Header'\nimport Grid from './Grid'\nimport Stopwatch from '../../utils/stopwatch'\n\ninterface State {\n  rowNum: number\n  colNum: number\n  bombNum: number\n  totalNum: number\n  blockMap: BlockMap | undefined\n  flippedNum: number\n  markedNum: number\n  stepNum: number\n  time: number\n  status: GameStatus\n  isFrightened: boolean\n}\n\ntype Props = {} & Partial<typeof defaultProps>\n\nconst defaultProps = createDefaultProps({\n  back: '⬜',\n  blank: '◻️',\n  mark: '🚩',\n  bomb: '💣',\n  boom: '💥',\n  ongoing: '😀',\n  completed: '😎',\n  failed: '😵',\n  frightened: '😬',\n  hovered: '😶',\n  rowNum: 10,\n  colNum: 10,\n  bombNum: 10,\n})\n\nconst getProps = createPropsGetter(defaultProps)\n\nconst classBlock = 'minesweeper'\n\nexport default class Minesweeper extends Component<Props, State> {\n  static defaultProps = defaultProps\n\n  stopwatch: Stopwatch\n\n  constructor(props: Props) {\n    super(props)\n\n    const { rowNum, colNum, bombNum } = this.innerProps\n\n    this.state = {\n      ...createEmptyGame(rowNum, colNum, bombNum),\n      isFrightened: false,\n    }\n\n    this.stopwatch = new Stopwatch()\n    this.stopwatch.on('tick', this.handleStopwatchTick)\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State) {\n    const { rowNum, colNum, bombNum } = this.innerProps\n    const {\n      rowNum: prevRowNum,\n      colNum: prevColNum,\n      bombNum: prevBombNum,\n    } = getProps(prevProps)\n\n    if (\n      rowNum !== prevRowNum ||\n      colNum !== prevColNum ||\n      bombNum !== prevBombNum\n    ) {\n      this.setState({\n        ...createEmptyGame(rowNum, colNum, bombNum),\n      })\n      return\n    }\n\n    if (\n      this.state.status === 'ongoing' &&\n      this.state.flippedNum === this.state.totalNum - this.state.bombNum\n    ) {\n      this.setState({\n        status: 'completed',\n      })\n      this.stopwatch.stop()\n    }\n  }\n\n  handleHeaderClick = () => {\n    const { rowNum, colNum, bombNum } = this.innerProps\n\n    this.setState({ ...createEmptyGame(rowNum, colNum, bombNum) })\n    this.stopwatch.stop()\n  }\n\n  handleBlockSpread = (block: BlockState) => {\n    block.isFlipped = true\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        flippedNum: prevState.flippedNum + 1,\n      }\n    })\n\n    if (block.isMarked) {\n      block.isMarked = false\n      this.setState((prevState) => {\n        return {\n          ...prevState,\n          markedNum: prevState.markedNum - 1,\n        }\n      })\n    }\n  }\n\n  handleStopwatchTick = (e: { time: number }) => {\n    this.setState({\n      time: e.time,\n    })\n  }\n\n  handleBlockMouseUp = (row: number, col: number, e: React.MouseEvent) => {\n    // quit if not left button\n    if (e.button !== 0) {\n      return\n    }\n\n    const { rowNum, colNum, bombNum, totalNum, status, stepNum } = this.state\n    let blockMap: BlockMap\n\n    if (!this.state.blockMap) {\n      blockMap = createBlockMap({\n        rowNum,\n        colNum,\n        bombNum,\n        totalNum,\n        seedRow: row,\n        seedCol: col,\n      })\n\n      this.setState({ blockMap })\n\n      this.stopwatch.start()\n    } else {\n      blockMap = this.state.blockMap\n    }\n\n    const block = blockMap[row * colNum + col]\n\n    if (status !== 'ongoing' || block.isFlipped || block.isMarked) {\n      return\n    }\n\n    this.setState({\n      isFrightened: false,\n      stepNum: stepNum + 1,\n    })\n\n    if (block.type === -1) {\n      block.type = -2\n\n      this.setState({\n        status: 'failed',\n      })\n\n      this.stopwatch.stop()\n\n      return\n    }\n\n    spread({\n      rowNum,\n      colNum,\n      blockMap,\n      row,\n      col,\n      handler: this.handleBlockSpread,\n    })\n\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        blockMap: [...blockMap],\n      }\n    })\n  }\n\n  handleBlockContextMenu = (row: number, col: number, e: React.MouseEvent) => {\n    const { colNum, blockMap, markedNum, status } = this.state\n\n    if (!blockMap) {\n      return\n    }\n\n    const block = blockMap[row * colNum + col]\n\n    if (status !== 'ongoing' || block.isFlipped) {\n      return\n    }\n\n    block.isMarked = !block.isMarked\n\n    this.setState({\n      markedNum: markedNum + (block.isMarked ? 1 : -1),\n      blockMap: [...blockMap],\n      isFrightened: false,\n    })\n  }\n\n  handleBlockMouseEnter = (row: number, col: number, e: React.MouseEvent) => {\n    const { colNum, blockMap } = this.state\n\n    if (!blockMap) {\n      this.setState({\n        isFrightened: true,\n      })\n      return\n    }\n\n    const block = blockMap[row * colNum + col]\n\n    if (block.isFlipped || block.isMarked) {\n      return\n    }\n\n    this.setState({\n      isFrightened: true,\n    })\n  }\n\n  handleBlockMouseLeave = (row: number, col: number, e: React.MouseEvent) => {\n    this.setState({\n      isFrightened: false,\n    })\n  }\n\n  get innerProps() {\n    return getProps(this.props)\n  }\n\n  renderHeader() {\n    const { status, isFrightened } = this.state\n    const { ongoing, completed, failed, frightened, hovered } = this.innerProps\n\n    return (\n      <Header\n        classBlock={classBlock}\n        ongoing={ongoing}\n        completed={completed}\n        failed={failed}\n        frightened={frightened}\n        hovered={hovered}\n        status={status}\n        isFrightened={isFrightened}\n        onClick={this.handleHeaderClick}\n      />\n    )\n  }\n\n  renderGrid() {\n    const innerProps = this.innerProps\n    const { rowNum, colNum, blockMap, status } = this.state\n    const gridProps = {\n      classBlock,\n      back: innerProps.back,\n      blank: innerProps.blank,\n      mark: innerProps.mark,\n      bomb: innerProps.bomb,\n      boom: innerProps.boom,\n      rowNum,\n      colNum,\n      blockMap,\n      status,\n    }\n\n    return (\n      <Grid\n        {...gridProps}\n        onMouseUp={this.handleBlockMouseUp}\n        onContextMenu={this.handleBlockContextMenu}\n        onMouseEnter={this.handleBlockMouseEnter}\n        onMouseLeave={this.handleBlockMouseLeave}\n      />\n    )\n  }\n\n  renderFooter() {\n    const { markedNum, stepNum, time } = this.state\n    const { bombNum } = this.innerProps\n\n    return (\n      <div className={`${classBlock}__footer`}>\n        <div className={`${classBlock}__bomb-counter`}>\n          <span>\n            {bombNum - markedNum} / {bombNum}\n          </span>\n          <span>BOMBS</span>\n        </div>\n        <div className={`${classBlock}__step-counter`}>\n          <span>{stepNum}</span>\n          <span>STEPS</span>\n        </div>\n        <div className={`${classBlock}__time-counter`}>\n          <span>{(time / 1000).toFixed(3)}</span>\n          <span>TIME</span>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div\n        className={`${classBlock}`}\n        onContextMenu={(e) => e.preventDefault()}\n      >\n        {this.renderHeader()}\n        {this.renderGrid()}\n        {this.renderFooter()}\n      </div>\n    )\n  }\n}\n","import { BlockMap, BlockState } from './game'\n\nexport default function spread(options: {\n  rowNum: number\n  colNum: number\n  blockMap: BlockMap\n  row: number\n  col: number\n  handler: (block: BlockState) => void\n}) {\n  const { rowNum, colNum, blockMap, row, col, handler } = options\n  const block = blockMap[row * colNum + col]\n\n  if (block.isFlipped || block.type === -1) {\n    return\n  }\n\n  handler(block)\n\n  if (block.type !== 0) {\n    return\n  }\n\n  // left top\n  if (row > 0 && col > 0) {\n    spread({\n      ...options,\n      row: row - 1,\n      col: col - 1,\n    })\n  }\n\n  // top\n  if (row > 0) {\n    spread({\n      ...options,\n      row: row - 1,\n      col: col,\n    })\n  }\n\n  // right top\n  if (row > 0 && col < colNum - 1) {\n    spread({\n      ...options,\n      row: row - 1,\n      col: col + 1,\n    })\n  }\n\n  // left\n  if (col > 0) {\n    spread({\n      ...options,\n      row: row,\n      col: col - 1,\n    })\n  }\n\n  // right\n  if (col < colNum - 1) {\n    spread({\n      ...options,\n      row: row,\n      col: col + 1,\n    })\n  }\n\n  // left bottom\n  if (row < rowNum - 1 && col > 0) {\n    spread({\n      ...options,\n      row: row + 1,\n      col: col - 1,\n    })\n  }\n\n  // bottom\n  if (row < rowNum - 1) {\n    spread({\n      ...options,\n      row: row + 1,\n      col: col,\n    })\n  }\n\n  // right bottom\n  if (row < rowNum - 1 && col < colNum - 1) {\n    spread({\n      ...options,\n      row: row + 1,\n      col: col + 1,\n    })\n  }\n}\n","import Minesweeper from './Minesweeper'\nimport './styles/index.scss'\n\nexport default Minesweeper\n","import React from 'react'\nimport './App.css'\nimport Minesweeper from './containers/minesweeper'\n\nconst App: React.FC = () => {\n  return (\n    <div className='app'>\n      <Minesweeper />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}